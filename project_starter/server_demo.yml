Description: >
  Carlos Rivas / Udacity
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  myLaunchTemplateVersionNumber:
    Type : String
    Default : 1
  InstanceType:
    Description: "The EC2 instance type of general purpose"
    Type: String
    AllowedValues: [ t2.medium,t3.medium ]
  KeyName:
    Description: "key name"
    Type: String
Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  myWebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install apache2 -y
            systemctl start apache2.service
            sudo aws s3 cp s3://udagram-s3-store1/index.html /var/www/html 
            systemctl restart apache2.service
        ImageId: ami-024fc608af8f886bc
        KeyName: !Ref 'KeyName'
        SecurityGroupIds:
          - sg-05c93793429066ab5
        InstanceType: !Ref 'InstanceType'
        BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: '10'

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchTemplate:
        LaunchTemplateId: !Ref myWebAppLaunchTemplate
        Version: !Ref myLaunchTemplateVersionNumber
      MinSize: '3'
      MaxSize: '5'
      TargetGroupARNs:
        - Ref: WebAppTargetGroup

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
        - Ref: LBSecGroup


  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP
  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
          - Type: forward
            TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
          - Field: path-pattern
            Values: [ / ]
        ListenerArn: !Ref 'Listener'
        Priority: 1
  WebAppTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        HealthCheckIntervalSeconds: 10
        HealthCheckPath: /
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 8
        HealthyThresholdCount: 2
        Port: 80
        Protocol: HTTP
        UnhealthyThresholdCount: 5
        VpcId:
          Fn::ImportValue:
            Fn::Sub: "${EnvironmentName}-VPCID"

Outputs:

  WebsiteURL:
    Description: DNS Name of the web application throught the Load Balancer
    Value: !Sub http://${WebAppLB.DNSName}
    Export:
      Name: !Sub ${EnvironmentName}-DNS-NAME